# ============================================
# DeraLinks Backend API Environment Variables
# ============================================
#
# SETUP INSTRUCTIONS:
# 1. Copy this file to .env: cp .env.example .env
# 2. Fill in all required values marked with <REQUIRED>
# 3. Generate random secrets for JWT_SECRET and SESSION_SECRET
# 4. Never commit .env to git (it's in .gitignore)
#
# For Render Deployment:
# - Use Render's environment variables UI
# - Render auto-provides DATABASE_URL and REDIS_URL
# - See RENDER-ENV-VARIABLES.md for complete guide
# ============================================

# ============================================
# SERVER CONFIGURATION
# ============================================
NODE_ENV=development
PORT=3600
API_VERSION=v1

# ============================================
# DATABASE CONFIGURATION (PostgreSQL)
# ============================================
# Local Development - Individual connection params
DB_HOST=localhost
DB_PORT=5432
DB_USER=deralinks
DB_PASSWORD=deralinks_dev_password
DB_NAME=deralinks_db
DB_SSL=false
DB_POOL_MIN=2
DB_POOL_MAX=10

# Render/Production - Connection string (auto-provided by Render)
# DATABASE_URL=postgresql://user:password@host:port/database
# Note: If DATABASE_URL is set, it takes precedence over individual params

# ============================================
# REDIS CONFIGURATION
# ============================================
# Local Development - Individual connection params
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# Render/Production - Connection string (auto-provided by Render)
# REDIS_URL=redis://user:password@host:port
# Note: If REDIS_URL is set, it takes precedence over individual params

# ============================================
# HEDERA BLOCKCHAIN CONFIGURATION <REQUIRED>
# ============================================
# Get from: hedera-setup/output/accounts.json
OPERATOR_ID=0.0.xxxxx
OPERATOR_KEY=302e020100300506032b657004220420xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Hedera Network (testnet or mainnet)
HEDERA_NETWORK=testnet

# Mirror Node API URL
HEDERA_MIRROR_NODE_URL=https://testnet.mirrornode.hedera.com

# ============================================
# PLATFORM ACCOUNTS <REQUIRED>
# ============================================
# Treasury Account (holds NFTs initially)
TREASURY_ACCOUNT_ID=0.0.xxxxx
TREASURY_PRIVATE_KEY=302e020100300506032b657004220420xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Fee Collector Account (receives platform fees and royalties)
FEE_COLLECTOR_ACCOUNT_ID=0.0.xxxxx

# Admin Account (platform administrator)
ADMIN_ACCOUNT_ID=0.0.xxxxx

# ============================================
# VERIFICATION NFT COLLECTIONS (Soulbound Tokens)
# ============================================
# Token IDs for verification NFTs
VERIFICATION_TOKEN_PROPERTY_OWNER=0.0.xxxxx
VERIFICATION_TOKEN_INVESTOR=0.0.xxxxx
VERIFICATION_TOKEN_ACCREDITED_INVESTOR=0.0.xxxxx

# Supply keys for minting verification NFTs
VERIFICATION_SUPPLY_KEY_PROPERTY_OWNER=302e020100300506032b657004220420xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
VERIFICATION_SUPPLY_KEY_INVESTOR=302e020100300506032b657004220420xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
VERIFICATION_SUPPLY_KEY_ACCREDITED_INVESTOR=302e020100300506032b657004220420xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# ============================================
# IPFS/PINATA CONFIGURATION <REQUIRED>
# ============================================
# Get from: https://app.pinata.cloud/developers/api-keys
PINATA_API_KEY=your_pinata_api_key_here
PINATA_SECRET_KEY=your_pinata_secret_key_here
PINATA_JWT=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# ============================================
# JWT AUTHENTICATION <REQUIRED - GENERATE NEW>
# ============================================
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=GENERATE_A_RANDOM_64_CHARACTER_HEX_STRING_HERE
JWT_EXPIRES_IN=7d
JWT_REFRESH_EXPIRES_IN=30d

# ============================================
# SESSION SECRET <REQUIRED - GENERATE NEW>
# ============================================
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
SESSION_SECRET=GENERATE_ANOTHER_RANDOM_64_CHARACTER_HEX_STRING_HERE

# ============================================
# CORS CONFIGURATION
# ============================================
# Allowed frontend origin (update with your frontend URL)
CORS_ORIGIN=http://localhost:3000
CORS_CREDENTIALS=true

# ============================================
# RATE LIMITING
# ============================================
# Window in milliseconds (900000 = 15 minutes)
RATE_LIMIT_WINDOW_MS=900000
# Maximum requests per window
RATE_LIMIT_MAX_REQUESTS=100

# ============================================
# PLATFORM FEE CONFIGURATION
# ============================================
# Phase 1: Minting Fees (Upfront Revenue)
MINTING_BASE_FEE=50                    # Base minting fee in USD (default: 50)
MINTING_PER_NFT_FEE=0.5                # Per-NFT minting fee in USD (default: 0.5)

# Phase 1: Primary Sale Commission (First Sale from Treasury)
PRIMARY_SALE_COMMISSION=10             # Primary sale commission % (default: 10)

# Phase 2: Platform Transaction Fee (Marketplace Sales)
PLATFORM_TRANSACTION_FEE=2.5           # Platform transaction fee % (default: 2.5)

# Phase 2: Listing Fees
LISTING_FEE_STANDARD=25                # Standard listing fee in USD (default: 25)
LISTING_FEE_PREMIUM=100                # Premium listing fee in USD (default: 100)
LISTING_FEE_DURATION=90                # Listing duration in days (default: 90)

# NFT Royalty Fee (Enforced by Hedera Smart Contract)
ROYALTY_FEE=5                          # Royalty fee % on secondary sales (default: 5)

# ============================================
# DAO GOVERNANCE DEFAULTS
# ============================================
# Default quorum percentage (e.g., 50 = 50% of voting power)
DEFAULT_QUORUM_PERCENTAGE=50
# Default approval threshold (e.g., 50 = 50% of votes cast)
DEFAULT_APPROVAL_THRESHOLD=50
# Default voting period in days
DEFAULT_VOTING_PERIOD_DAYS=7

# ============================================
# CACHE TTL (Time To Live in seconds)
# ============================================
CACHE_TTL_SHORT=300
CACHE_TTL_MEDIUM=3600
CACHE_TTL_LONG=86400

# ============================================
# FILE UPLOAD CONFIGURATION
# ============================================
# Maximum file size in MB
MAX_FILE_SIZE_MB=10
# Allowed file MIME types (comma-separated)
ALLOWED_FILE_TYPES=image/jpeg,image/png,image/webp,application/pdf

# ============================================
# LOGGING CONFIGURATION
# ============================================
# Log level: debug, info, warn, error
LOG_LEVEL=debug
# Log file path (use /tmp/logs for Render)
LOG_FILE_PATH=./logs

# ============================================
# KYC/COMPLIANCE CONFIGURATION
# ============================================
# Require KYC for purchases
KYC_REQUIRED_FOR_PURCHASE=false
# KYC threshold in USD
KYC_THRESHOLD_USD=2000
# KYC provider (sumsub, onfido, etc.)
KYC_PROVIDER=sumsub
# KYC provider API credentials (optional)
KYC_API_KEY=
KYC_SECRET_KEY=

# ============================================
# EMAIL CONFIGURATION (Optional)
# ============================================
SMTP_HOST=
SMTP_PORT=587
SMTP_USER=
SMTP_PASSWORD=
EMAIL_FROM=noreply@deralinks.com

# ============================================
# FRONTEND URL
# ============================================
# Your frontend application URL
FRONTEND_URL=http://localhost:3000

# ============================================
# EXTERNAL API KEYS (Optional)
# ============================================
GOOGLE_MAPS_API_KEY=
PROPERTY_VALUATION_API_KEY=

# ============================================
# ADDITIONAL NOTES
# ============================================
#
# Required for Local Development:
# - OPERATOR_ID, OPERATOR_KEY (from Hedera testnet)
# - PINATA_API_KEY, PINATA_SECRET_KEY, PINATA_JWT
# - JWT_SECRET, SESSION_SECRET (generate new random values)
# - Database and Redis (via Docker Compose)
#
# Required for Render Deployment:
# - All of the above PLUS:
# - DATABASE_URL (auto-provided by Render PostgreSQL)
# - REDIS_URL (auto-provided by Render Redis)
# - CORS_ORIGIN (update with actual frontend URL)
# - DB_SSL=true (for Render PostgreSQL)
# - LOG_FILE_PATH=/tmp/logs (Render ephemeral storage)
# - NODE_ENV=production
#
# Security Best Practices:
# - Never commit .env to git
# - Use different credentials for dev/staging/production
# - Rotate JWT_SECRET and SESSION_SECRET periodically
# - Use strong, random values for all secrets
# - Keep operator keys and private keys secure
# - Enable 2FA on Hedera portal account
# - Use environment encryption in Render
#
# For complete deployment guide, see:
# - RENDER-DEPLOYMENT-GUIDE.md
# - RENDER-ENV-VARIABLES.md
# - DEPLOYMENT-CHECKLIST.md
#
# ============================================
