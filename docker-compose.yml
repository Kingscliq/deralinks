version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: deralinks-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-deralinks}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-deralinks_dev_password}
      POSTGRES_DB: ${DB_NAME:-deralinks_db}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - deralinks-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U deralinks -d deralinks_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache (optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: deralinks-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - deralinks-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: deralinks-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: ${API_PORT:-3600}

      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-deralinks}
      DB_PASSWORD: ${DB_PASSWORD:-deralinks_dev_password}
      DB_NAME: ${DB_NAME:-deralinks_db}

      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379

      # Hedera (from root .env)
      OPERATOR_ID: ${OPERATOR_ID}
      OPERATOR_KEY: ${OPERATOR_KEY}
      HEDERA_NETWORK: ${HEDERA_NETWORK:-testnet}

      # IPFS/Pinata
      PINATA_API_KEY: ${PINATA_API_KEY}
      PINATA_SECRET_KEY: ${PINATA_SECRET_KEY}

      # JWT
      JWT_SECRET: ${JWT_SECRET:-dev_secret_change_in_production}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}

      # CORS
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
    ports:
      - "${API_PORT:-3600}:3600"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./hedera-setup/output:/app/hedera-data:ro
    networks:
      - deralinks-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev

  # pgAdmin (Database GUI - optional, for development)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: deralinks-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@deralinks.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - deralinks-network
    depends_on:
      - postgres
    profiles:
      - dev-tools

networks:
  deralinks-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
